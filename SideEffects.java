// Демонстрация особого значения побочных эффектов, 
class SideEffects {
	public static void main(String args[]) { 
		int i;
		i = 0;
		
		/* Значение переменной i все равно инкрементируется, несмотря на то, 
		что проверяемое условие в операторе if ложно. */ 
		
		if (false & (++i < 100))
			System.out.println("this won't be displayed");
		System.out.println("if statements executed: " + i); // выводится 1
		
		/* В данном случае значение переменной i не инкрементируется, 
		поскольку второй операнд укороченного логического оператора 
		не вычисляется, а следовательно, инкремент пропускается. */ 

		if (false && (++i < 100))
			System.out.println("this won't be displayed");
		System.out.println("if statements executed: " + i); // still 1 !!
	}
}
/*	Как следует из приведенного выше фрагмента кода и комментариев к нему, 
в первом условном операторе if значение переменной i должно увеличиваться 
на единицу независимо от того, выполняется ли условие этого оператора. 
Но когда во втором условном операторе if применяется укороченный логический оператор, 
значение переменной i не инкрементируется, поскольку первый операнд в проверяемом 
условии имеет логическое значение false. 
Следовательно, если логика программы требует, чтобы второй операнд логического оператора 
непременно вычислялся, следует применять обычные, а не укороченные формы логических операторов.*/